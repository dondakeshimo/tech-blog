{"pageProps":{"post":{"title":"cronジョブを追加する4つの方法","date":"2020-12-12","slug":"2020-12-12-how_to_use_cron","author":{"name":"JJ Kasper","picture":"/assets/blog/authors/jj.jpeg"},"content":"<h1 id=\"目次\">目次</h1>\n<ul>\n<li><a href=\"#%E3%83%A2%E3%83%81%E3%83%99%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\">モチベーション</a></li>\n<li><a href=\"#cron%E3%82%B8%E3%83%A7%E3%83%96%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B4%E3%81%A4%E3%81%AE%E6%96%B9%E6%B3%95\">cronジョブを追加する4つの方法</a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#4%E3%81%A4%E3%81%AE%E6%96%B9%E6%B3%95\">4つの方法</a></li>\n<li><a href=\"#crontab--e-%E3%81%AB%E3%82%88%E3%82%8B%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF%E3%82%92%E7%94%A8%E3%81%84%E3%81%9F%E7%B7%A8%E9%9B%86\"><code>crontab -e</code> によるエディタを用いた編集</a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#pros\">pros</a></li>\n<li><a href=\"#cons\">cons</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#crontab-file-%E3%81%AB%E3%82%88%E3%82%8B%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF\"><code>crontab [file]</code> によるファイルの読み込み</a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#pros-1\">pros</a></li>\n<li><a href=\"#cons-1\">cons</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#etccrondd\"><code>/etc/crond.d/</code></a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#pros-2\">pros</a></li>\n<li><a href=\"#cons-2\">cons</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#varspoolcroncrontabsuser-%E3%81%AB%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%BF%BD%E5%8A%A0\"><code>/var/spool/cron/crontabs/$USER</code> にファイルを追加</a>\n<ul>\n<li>\n<ul>\n<li><a href=\"#pros-3\">pros</a></li>\n<li><a href=\"#cons-3\">cons</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\">まとめ</a></li>\n</ul>\n<h1 id=\"モチベーション\">モチベーション</h1>\n<p>現在作成しているCLIアプリケーションについてcronジョブを設定する必要があった。\ncronジョブの設定方法としては <code>crontab -e</code> を用いる方法を知っていたが、プログラム内から\nジョブを編集するにはエディタを開かれては困るということでその他の方法を調べたのでついでにここにまとめる。</p>\n<h1 id=\"cronジョブを追加する4つの方法\">cronジョブを追加する4つの方法</h1>\n<h3 id=\"4つの方法\">4つの方法</h3>\n<p>先に調べた方法をそれぞれ記載する</p>\n<ul>\n<li><code>crontab -e</code></li>\n<li><code>crontab [file]</code></li>\n<li><code>/etc/cron.d/</code></li>\n<li><code>/var/spool/cron/crontabs/$USER/</code> ？</li>\n</ul>\n<p>最後の方法は動作未検証のため？をつけている。\nそれぞれの特徴を以下に述べていく。</p>\n<h3 id=\"crontab--e-によるエディタを用いた編集\"><code>crontab -e</code> によるエディタを用いた編集</h3>\n<p>言わずと知れたエディタで編集する方法。</p>\n<pre><code>$ crontab -u $USER -e\n</code></pre>\n<p>とすることで <code>$USER</code> 権限のcronジョブを作成することができる。\n有名なデメリットに</p>\n<pre><code>$ crontab -r\n</code></pre>\n<p>を誤って起動してしまうというものがある。\nこちらのコマンドはcronジョブを全消去するというもので非常に危険であるのに対し、\n確認もなく、よく使うオプションの <code>e</code> の隣にある <code>r</code> であることから事故が立たないとのこと。\nそのため、 <code>/etc/crontab</code> を直接編集する派閥もいるらしい。\n上記の直接編集もこちらの項目に含めて考える。</p>\n<h5 id=\"pros\">pros</h5>\n<ul>\n<li>エディタでそのまま手軽に編集できる</li>\n<li>権限を決められる</li>\n</ul>\n<h5 id=\"cons\">cons</h5>\n<ul>\n<li>プログラムから使用しづらい</li>\n<li>死の危険と隣り合わせ</li>\n</ul>\n<h3 id=\"crontab-file-によるファイルの読み込み\"><code>crontab [file]</code> によるファイルの読み込み</h3>\n<p>crontabコマンドは引数としてファイルを渡すとそのファイルを$USERのcronジョブ置き場に配置してくれる。\n<code>crontab -e</code> と同様にユーザを指定することも可能。</p>\n<pre><code>$ crontab -u $USER [file]\n</code></pre>\n<h5 id=\"pros-1\">pros</h5>\n<ul>\n<li>プログラムで使いやすい</li>\n<li>権限を決められる</li>\n</ul>\n<h5 id=\"cons-1\">cons</h5>\n<ul>\n<li>一度情報をファイルに起こさないといけない</li>\n<li>削除や編集の仕方がわからない？ &#x3C;- 要検証</li>\n</ul>\n<h3 id=\"etccrondd\"><code>/etc/crond.d/</code></h3>\n<p>指定のディレクトリにジョブを記載したファイルを配置する。\ncronは <code>/etc/cron.d/</code> を含め、いくつかのディレクトリ配下に配置されたジョブファイルを自動で読み取りに行く。\nファイルを配置しておくだけなのでかなり自由度高くジョブを操作できる。\n問題点は権限がrootでなくてはいけないところ。</p>\n<h5 id=\"pros-2\">pros</h5>\n<ul>\n<li>ファイルを配置するだけなので自由度高い</li>\n</ul>\n<h5 id=\"cons-2\">cons</h5>\n<ul>\n<li>権限がrootのみ</li>\n<li>file modeにも気を使う必要がある (確か644のみ)</li>\n</ul>\n<h3 id=\"varspoolcroncrontabsuser-にファイルを追加\"><code>/var/spool/cron/crontabs/$USER</code> にファイルを追加</h3>\n<p>上記の <code>/etc/cron.d/</code> 配下にファイルを追加する方法だと権限がrootになってしまうということで調べた方法。\n<code>/var/spool/cron/crontabs/$USER</code> は <code>crontab -u $USER</code> としたときに開かれるcronジョブファイルが配置されている場所なので\n権限は <code>$USER</code> になるはずである。\nただし落とし穴があり、 <code>/var/spool/cron/crontabs/</code> には <code>$USER</code> に対して書き込み権限どころか読み取り権限すら\n与えられておらず現実的に目的の位置にファイルを配置するためにはroot権限が必要なることである。\n調べている途中で使うことはないなと思ったので本当に動くかどうかも怪しいのは許していただきた。</p>\n<h5 id=\"pros-3\">pros</h5>\n<ul>\n<li>ファイルを配置するだけなので自由度高い</li>\n<li>$USER権限</li>\n</ul>\n<h5 id=\"cons-3\">cons</h5>\n<ul>\n<li>配置するためにroot権限が必要</li>\n<li>file modeに気を使う必要がある</li>\n</ul>\n<h1 id=\"まとめ\">まとめ</h1>\n<p>以上、まとめてみた感想だが、cronは意外と扱いづらいことがわかった。</p>","ogImage":{"url":"/assets/blog/dynamic-routing/cover.jpg"},"coverImage":"/assets/blog/dynamic-routing/cover.jpg"}},"__N_SSG":true}